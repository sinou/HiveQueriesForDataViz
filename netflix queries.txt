INSERT OVERWRITE TABLE high_rated_movies
SELECT movie_titles.title AS Title, AVG(movie_ratings.rating) AS top_100
FROM movie_titles JOIN movie_ratings
ON movie_titles.m_id = movie_ratings.m_id
GROUP BY movie_titles.title
HAVING COUNT(movie_ratings.rating) > 10000
ORDER BY top_100 DESC
LIMIT 25;





INSERT OVERWRITE TABLE high_rated_movies
SELECT movie_titles.title AS Title, COUNT(*) AS top_100
FROM movie_titles JOIN movie_ratings
ON movie_titles.m_id = movie_ratings.m_id
WHERE movie_ratings.rating = 5
GROUP BY movie_titles.title
ORDER BY top_100 DESC
LIMIT 25;







CREATE EXTERNAL TABLE bandwagon_users(Cust_ID INT, Cust_Count INT)

ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' 

LOCATION 's3://sarvesh-ds-p1/output/';




INSERT OVERWRITE TABLE bandwagon_users

SELECT movie_ratings.cust_id, count(movie_ratings.cust_id) AS customer_count 

FROM movie_ratings JOIN

(SELECT movie_titles.m_id AS movie_id, movie_titles.title AS Title, COUNT(*) AS top_100

FROM movie_titles JOIN movie_ratings

ON movie_titles.m_id = movie_ratings.m_id

WHERE movie_ratings.rating = 5

GROUP BY movie_titles.title, movie_titles.m_id

ORDER BY top_100 DESC

LIMIT 100) ratings_temp

ON movie_ratings.m_id = ratings_temp.movie_id

GROUP by movie_ratings.cust_id

HAVING count(movie_ratings.cust_id) = 100;







CREATE EXTERNAL TABLE bandwagon_u_m(movie_id INT, average FLOAT)

ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' 

LOCATION 's3://sarvesh-ds-p1/output/';




INSERT OVERWRITE TABLE bandwagon_users_movies

SELECT DISTINCT movie_ratings.m_id FROM movie_ratings JOIN

(SELECT movie_ratings.cust_id AS mr_custid, count(movie_ratings.cust_id) AS customer_count 

FROM movie_ratings JOIN

(SELECT movie_titles.m_id AS movie_id, movie_titles.title AS Title, COUNT(*) AS top_100

FROM movie_titles JOIN movie_ratings

ON movie_titles.m_id = movie_ratings.m_id

WHERE movie_ratings.rating = 5

GROUP BY movie_titles.title, movie_titles.m_id

ORDER BY top_100 DESC

LIMIT 100) ratings_temp

ON movie_ratings.m_id = ratings_temp.movie_id

GROUP by movie_ratings.cust_id

HAVING count(movie_ratings.cust_id) = 100) cust_ratings

WHERE movie_ratings.cust_id = cust_ratings.mr_custid

AND movie_ratings.rating IN (1);



INSERT OVERWRITE TABLE bandwagon_users_movies

SELECT DISTINCT movie_ratings.m_id FROM movie_ratings
WHERE movie_ratings.cust_id IN(151821,265257,353477,387418,425394,663118,716173,732363,872591,908205,954973,962945,1114324,1314869,1569593,1616870,1629440,1660348,1753560,1772901,1852040,1934002,2089599,2118461,2181504,2202365,2218735,2278766,2320697,2439493,2537543,2606799)

AND movie_ratings.rating = 1;

INSERT OVERWRITE TABLE bandwagon_u_m

SELECT movie_ratings.m_id, AVG(movie_ratings.rating) FROM movie_ratings
WHERE movie_ratings.cust_id=151821
AND movie_ratings.rating = 1;
GROUP BY movie_ratings.m_id;



INSERT OVERWRITE TABLE bandwagon_u_m

SELECT movie_ratings.m_id AS m, AVG(movie_ratings.rating) FROM movie_ratings
JOIN (SELECT movie_ratings.m_id z FROM movie_ratings
WHERE movie_ratings.cust_id IN (151821,265257,353477,387418,425394)
AND movie_ratings.rating = 1) x
on movie_ratings.m_id = x.z
GROUP BY movie_ratings.m_id;




INSERT OVERWRITE TABLE bandwagon_u_m

SELECT movie_ratings.m_id, AVG(movie_ratings.rating) FROM movie_ratings JOIN (SELECT movie_ratings.cust_id AS cid FROM movie_ratings where movie_ratings.cust_id IN(151821,265257,353477,387418,425394,663118,716173,732363,872591,908205,954973,962945,1114324,1314869,1569593,1616870,1629440,1660348,1753560,1772901,1852040,1934002,2089599,2118461,2181504,2202365,2218735,2278766,2320697,2439493,2537543,2606799) AND movie_ratings.rating = 1) test
ON movie_ratings.cust_id = test.cid


GROUP BY movie_ratings.m_id;

CREATE EXTERNAL TABLE bwagon_hypothesis(movie_id INT, rating FLOAT)

ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' 

LOCATION 's3://sarvesh-ds-p1/output/';



INSERT OVERWRITE TABLE bwagon_hypothesis
SELECT movie_ratings.m_id, AVG(movie_ratings.rating) FROM movie_ratings JOIN

(SELECT DISTINCT movie_ratings.m_id AS mid FROM movie_ratings JOIN

(SELECT movie_ratings.cust_id AS mr_custid, count(movie_ratings.cust_id) AS customer_count 

FROM movie_ratings JOIN

(SELECT movie_titles.m_id AS movie_id, movie_titles.title AS Title, COUNT(*) AS top_100

FROM movie_titles JOIN movie_ratings

ON movie_titles.m_id = movie_ratings.m_id

WHERE movie_ratings.rating = 5

GROUP BY movie_titles.title, movie_titles.m_id

ORDER BY top_100 DESC

LIMIT 100) ratings_temp

ON movie_ratings.m_id = ratings_temp.movie_id

GROUP by movie_ratings.cust_id

HAVING count(movie_ratings.cust_id) = 100) cust_ratings

WHERE movie_ratings.cust_id = cust_ratings.mr_custid

AND movie_ratings.rating IN (1)) big
ON movie_ratings.m_id = big.mid
GROUP BY movie_ratings.m_id;




CREATE EXTERNAL TABLE best_years(year INT, rating FLOAT)

ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' 

LOCATION 's3://sarvesh-ds-p1/output/';
INSERT OVERWRITE TABLE best_years
SELECT year_of_release, AVG(rating) FROM movie_titles JOIN movie_ratings 
ON movie_titles.m_id =  movie_ratings.m_id
GROUP BY year_of_release;


CREATE EXTERNAL TABLE best_months(month INT, rating FLOAT)

ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' 

LOCATION 's3://sarvesh-ds-p1/output/';
INSERT OVERWRITE TABLE best_months
SELECT MONTH(date), AVG(rating) FROM movie_ratings
GROUP BY MONTH(date);



CREATE EXTERNAL TABLE count_months(month INT, count BIGINT)

ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' 

LOCATION 's3://sarvesh-ds-p1/output/';
INSERT OVERWRITE TABLE count_months
SELECT MONTH(date), SUM(rating) FROM movie_ratings
GROUP BY MONTH(date);